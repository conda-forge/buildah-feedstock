diff --git a/vendor/github.com/containers/common/pkg/config/config.go b/vendor/github.com/containers/common/pkg/config/config.go
index 0483a00d..a370d126 100644
--- a/vendor/github.com/containers/common/pkg/config/config.go
+++ b/vendor/github.com/containers/common/pkg/config/config.go
@@ -18,6 +18,34 @@ import (
 	"github.com/sirupsen/logrus"
 )

+// const char *condaPrefix = "";
+import "C"
+
+// For Conda environments we transform default configuration paths like so:
+//   /etc/path -> PREFIX/etc/path
+//   /usr/share/path -> PREFIX/share/path
+func PathInPrefix(path string) string {
+	condaPrefix := C.GoString(C.condaPrefix)
+	if condaPrefix == "" {
+		return path
+	}
+	relativePath := strings.TrimPrefix(path, "/usr")
+	return filepath.Join(condaPrefix, relativePath)
+}
+
+func FallbackToPathInPrefix(path string) string {
+	condaPrefix := C.GoString(C.condaPrefix)
+	if condaPrefix == "" {
+		return path
+	}
+	if _, err := os.Stat(path); err == nil {
+		return path
+	}
+	relativePath := strings.TrimPrefix(path, "/usr")
+	return filepath.Join(condaPrefix, relativePath)
+}
+
+
 const (
 	// _configPath is the path to the containers/containers.conf
 	// inside a given config directory.
@@ -618,8 +646,8 @@ func systemConfigs() ([]string, error) {
 		}
 		return append(configs, path), nil
 	}
-	if _, err := os.Stat(DefaultContainersConfig); err == nil {
-		configs = append(configs, DefaultContainersConfig)
+	if _, err := os.Stat(PathInPrefix(DefaultContainersConfig)); err == nil {
+		configs = append(configs, PathInPrefix(DefaultContainersConfig))
 	}
 	if _, err := os.Stat(OverrideContainersConfig); err == nil {
 		configs = append(configs, OverrideContainersConfig)
diff --git a/vendor/github.com/containers/common/pkg/config/default.go b/vendor/github.com/containers/common/pkg/config/default.go
index c5fca7f0c..e66116ed0 100644
--- a/vendor/github.com/containers/common/pkg/config/default.go
+++ b/vendor/github.com/containers/common/pkg/config/default.go
@@ -179,7 +179,8 @@ func DefaultConfig() (*Config, error) {
                return nil, err
        }

-       defaultEngineConfig.SignaturePolicyPath = DefaultSignaturePolicyPath
+       defaultSigPath := FallbackToPathInPrefix(DefaultSignaturePolicyPath)
+       defaultEngineConfig.SignaturePolicyPath = defaultSigPath
        if useUserConfigLocations() {
                configHome, err := homedir.GetConfigHome()
                if err != nil {
@@ -188,8 +189,8 @@ func DefaultConfig() (*Config, error) {
                sigPath := filepath.Join(configHome, DefaultRootlessSignaturePolicyPath)
                defaultEngineConfig.SignaturePolicyPath = sigPath
                if _, err := os.Stat(sigPath); err != nil {
-                       if _, err := os.Stat(DefaultSignaturePolicyPath); err == nil {
-                               defaultEngineConfig.SignaturePolicyPath = DefaultSignaturePolicyPath
+                       if _, err := os.Stat(defaultSigPath); err == nil {
+                               defaultEngineConfig.SignaturePolicyPath = defaultSigPath
                        }
                }
        }
diff --git a/vendor/github.com/containers/image/v5/docker/registries_d.go b/vendor/github.com/containers/image/v5/docker/registries_d.go
index 37087dd85..06dc511d7 100644
--- a/vendor/github.com/containers/image/v5/docker/registries_d.go
+++ b/vendor/github.com/containers/image/v5/docker/registries_d.go
@@ -9,6 +9,7 @@ import (
        "path/filepath"
        "strings"

+       "github.com/containers/common/pkg/config"
        "github.com/containers/image/v5/docker/reference"
        "github.com/containers/image/v5/internal/rootless"
        "github.com/containers/image/v5/types"
@@ -100,7 +101,7 @@ func registriesDirPathWithHomeDir(sys *types.SystemContext, homeDir string) stri
                return filepath.Join(sys.RootForImplicitAbsolutePaths, systemRegistriesDirPath)
        }

-       return systemRegistriesDirPath
+       return config.FallbackToPathInPrefix(systemRegistriesDirPath)
 }

 // loadAndMergeConfig loads configuration files in dirPath
diff --git a/vendor/github.com/containers/image/v5/pkg/sysregistriesv2/system_registries_v2.go b/vendor/github.com/containers/image/v5/pkg/sysregistriesv2/system_registries_v2.go
index 4c1629f5..388a3700 100644
--- a/vendor/github.com/containers/image/v5/pkg/sysregistriesv2/system_registries_v2.go
+++ b/vendor/github.com/containers/image/v5/pkg/sysregistriesv2/system_registries_v2.go
@@ -11,6 +11,7 @@ import (
 	"sync"

 	"github.com/BurntSushi/toml"
+	"github.com/containers/common/pkg/config"
 	"github.com/containers/image/v5/docker/reference"
 	"github.com/containers/image/v5/types"
 	"github.com/containers/storage/pkg/homedir"
@@ -522,7 +523,7 @@ func newConfigWrapperWithHomeDir(ctx *types.SystemContext, homeDir string) confi
 	} else if ctx != nil && ctx.RootForImplicitAbsolutePaths != "" {
 		wrapper.configPath = filepath.Join(ctx.RootForImplicitAbsolutePaths, systemRegistriesConfPath)
 	} else {
-		wrapper.configPath = systemRegistriesConfPath
+		wrapper.configPath = config.FallbackToPathInPrefix(systemRegistriesConfPath)
 	}

 	// potentially use both system and per-user dirs if not using per-user config file
@@ -533,7 +534,7 @@ func newConfigWrapperWithHomeDir(ctx *types.SystemContext, homeDir string) confi
 		wrapper.configDirPath = filepath.Join(ctx.RootForImplicitAbsolutePaths, systemRegistriesConfDirPath)
 		wrapper.userConfigDirPath = userRegistriesDirPath
 	} else {
-		wrapper.configDirPath = systemRegistriesConfDirPath
+		wrapper.configDirPath = config.FallbackToPathInPrefix(systemRegistriesConfDirPath)
 		wrapper.userConfigDirPath = userRegistriesDirPath
 	}

diff --git a/vendor/github.com/containers/image/v5/signature/policy_config.go b/vendor/github.com/containers/image/v5/signature/policy_config.go
index 82fbb68c..b8bbc1b8 100644
--- a/vendor/github.com/containers/image/v5/signature/policy_config.go
+++ b/vendor/github.com/containers/image/v5/signature/policy_config.go
@@ -21,6 +21,7 @@ import (
 	"path/filepath"
 	"regexp"

+	"github.com/containers/common/pkg/config"
 	"github.com/containers/image/v5/docker/reference"
 	"github.com/containers/image/v5/transports"
 	"github.com/containers/image/v5/types"
@@ -75,7 +76,7 @@ func defaultPolicyPathWithHomeDir(sys *types.SystemContext, homeDir string) stri
 	if sys != nil && sys.RootForImplicitAbsolutePaths != "" {
 		return filepath.Join(sys.RootForImplicitAbsolutePaths, systemDefaultPolicyPath)
 	}
-	return systemDefaultPolicyPath
+	return config.FallbackToPathInPrefix(systemDefaultPolicyPath)
 }

 // NewPolicyFromFile returns a policy configured in the specified file.
